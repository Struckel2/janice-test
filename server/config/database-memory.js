const mongoose = require('mongoose');

// Configura√ß√£o para banco em mem√≥ria (apenas para desenvolvimento/teste)
const connectDB = async () => {
  try {
    console.log('üîÑ Conectando ao banco em mem√≥ria...');
    
    // Usar banco em mem√≥ria se MongoDB n√£o estiver dispon√≠vel
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/janice';
    
    const conn = await mongoose.connect(mongoUri, {
      // Remover op√ß√µes depreciadas
    });

    console.log(`‚úÖ MongoDB conectado: ${conn.connection.host}`);
    return conn;
  } catch (error) {
    console.log('‚ùå Erro ao conectar ao MongoDB:', error.message);
    console.log('üîÑ Tentando usar banco em mem√≥ria...');
    
    try {
      // Fallback para banco em mem√≥ria
      const { MongoMemoryServer } = require('mongodb-memory-server');
      
      const mongod = new MongoMemoryServer();
      await mongod.start();
      const uri = mongod.getUri();
      
      const conn = await mongoose.connect(uri);
      console.log('‚úÖ Banco em mem√≥ria conectado com sucesso!');
      console.log('‚ö†Ô∏è  ATEN√á√ÉO: Dados ser√£o perdidos ao reiniciar o servidor');
      
      return conn;
    } catch (memoryError) {
      console.error('‚ùå Erro ao conectar ao banco em mem√≥ria:', memoryError.message);
      console.log('üìã Para resolver permanentemente, instale o MongoDB seguindo CONFIGURAR_MONGODB.md');
      process.exit(1);
    }
  }
};

module.exports = connectDB;
